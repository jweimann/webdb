Consider skipping the webapi layer and doing a direct connection 
between the prism client and the server.  Could avoid serialization
and improve performance and simplicity.
- Also check if entities from ef can serialize across as akka messages.  if so
this gets very simplified as we don't need model objects anymore.
(they should be able to if the dynamic/lazy option is off in the config,
that may also eliminate the need for model objects with webapi.)

Find a better way to show relationships in prism where I don't need to duplicate data & manage so much on the server side.

Complete the ClientViewActor and ClientViewProviderActor
I think this will require an actor per DB table where the views can subscribe to an ID on the actor.
The actor will get a message whenever an entity is updated with the ID of the updated entity.
It will then message all views subscribed to that ID so the client can be notified that their data is dirty.

 private void FillEntityTypes() - this has ModelObject<> (looks like a generic) but shouldn't because it doesn't exist and should be abstract if it did..